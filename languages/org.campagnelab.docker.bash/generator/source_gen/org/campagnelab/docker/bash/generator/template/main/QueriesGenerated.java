package org.campagnelab.docker.bash.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.campagnelab.docker.behavior.Config__BehaviorDescriptor;
import org.campagnelab.docker.bash.behavior.DockerBash__BehaviorDescriptor;
import org.campagnelab.docker.behavior.DockerContainer__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.impl.query.QueryKeyImpl;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static Object propertyMacro_GetPropertyValue_5287487597357206620(final PropertyMacroContext _context) {
    return Config__BehaviorDescriptor.optionsOrEmptyString_id3DC7OdoUke7.invoke(DockerBash__BehaviorDescriptor.dockerConfig_id4_wVviqFDHQ.invoke(_context.getNode())).replaceAll("\"", "&quot;");
  }
  public static Object propertyMacro_GetPropertyValue_5287487597357212593(final PropertyMacroContext _context) {
    return (String) DockerContainer__BehaviorDescriptor.formattedAddress_id1D6dZ$xfhKE.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x3b74e3b77336414dL, 0x889964a293a44a07L, 0x20c7aeb74b0c877L, 0x49b6be7878bddc0L, "container")));
  }
  public static Object propertyMacro_GetPropertyValue_5287487597355917719(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(DockerBash__BehaviorDescriptor.dockerConfig_id4_wVviqFDHQ.invoke(_context.getNode()), MetaAdapterFactory.getProperty(0x25281c034a7c4b57L, 0x922124a10fc36ef5L, 0x7cb9b400d612dc01L, 0x7cb9b400d612dc02L, "pathToDocker"));
  }
  public static Object propertyMacro_GetPropertyValue_7659857676179827046(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_1120185470126962968(final PropertyMacroContext _context) {
    return "'/bin/bash -ue ${working.dir}/" + DockerBash__BehaviorDescriptor.outputBashFile_id6qTMo28aK0q.invoke(_context.getNode()) + "'";
  }
  public static Object propertyMacro_GetPropertyValue_3578269529271704449(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_3578269529273481267(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(DockerBash__BehaviorDescriptor.dockerConfig_id4_wVviqFDHQ.invoke(_context.getNode()), MetaAdapterFactory.getProperty(0x25281c034a7c4b57L, 0x922124a10fc36ef5L, 0x7cb9b400d612dc01L, 0x7cb9b400d612dc02L, "pathToDocker"));
  }
  public static Object propertyMacro_GetPropertyValue_1311266352921119148(final PropertyMacroContext _context) {
    return (String) DockerBash__BehaviorDescriptor.outputBuildFileNoExt_id18MzsNNO9Z1.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_2935026767522111584(final PropertyMacroContext _context) {
    return (String) DockerBash__BehaviorDescriptor.outputBashFile_id6qTMo28aK0q.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_2935026767522129093(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x3b74e3b77336414dL, 0x889964a293a44a07L, 0x20c7aeb74b0c877L, 0x20c7aeb74b0cc54L, "script"));
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("2935026767522129093", new QueriesGenerated.SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snqMethods.containsKey(id))) {
      return super.getSourceNodeQuery(identity);
    }
    return snqMethods.get(id);
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_2935026767522129093(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("5287487597357206619", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "options from config"));
    pvqMethods.put("5287487597357212592", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "image"));
    pvqMethods.put("5287487597355917718", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "docker"));
    pvqMethods.put("7659857676179827043", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "container name"));
    pvqMethods.put("1120185470126962967", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "bash command"));
    pvqMethods.put("3578269529271704448", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "container name"));
    pvqMethods.put("3578269529273481266", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "docker"));
    pvqMethods.put("1311266352921119145", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "build.xml"));
    pvqMethods.put("2935026767522111583", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "script.sh"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(pvqMethods.containsKey(id))) {
      return super.getPropertyValueQuery(identity);
    }
    return pvqMethods.get(id);
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetPropertyValue_5287487597357206620(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetPropertyValue_5287487597357212593(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetPropertyValue_5287487597355917719(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetPropertyValue_7659857676179827046(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetPropertyValue_1120185470126962968(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetPropertyValue_3578269529271704449(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetPropertyValue_3578269529273481267(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetPropertyValue_1311266352921119148(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetPropertyValue_2935026767522111584(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
}
